// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using simpl_ToDoListe.Data.Context;

#nullable disable

namespace simpl_ToDoList.api.Migrations
{
    [DbContext(typeof(simpl_ToDoListDBContect))]
    [Migration("20230726114118_initialSimpl_ToDoList")]
    partial class initialSimpl_ToDoList
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("simpl_ToDoList.Data.Entity.Status", b =>
                {
                    b.Property<int>("idStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("idStatus");

                    b.ToTable("Statuss");
                });

            modelBuilder.Entity("simpl_ToDoList.Data.Entity.Tache", b =>
                {
                    b.Property<int>("IdTache")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDatetache")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DesTache")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("DueDatetache")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("StatusidStatus")
                        .HasColumnType("int");

                    b.Property<int>("UserIdUser")
                        .HasColumnType("int");

                    b.Property<int>("idStatus")
                        .HasColumnType("int");

                    b.Property<int>("idUser")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdTache");

                    b.HasIndex("StatusidStatus");

                    b.HasIndex("UserIdUser");

                    b.ToTable("Taches");
                });

            modelBuilder.Entity("simpl_ToDoList.Data.Entity.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdUser");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("simpl_ToDoList.Data.Entity.Tache", b =>
                {
                    b.HasOne("simpl_ToDoList.Data.Entity.Status", "Status")
                        .WithMany("taches")
                        .HasForeignKey("StatusidStatus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("simpl_ToDoList.Data.Entity.User", "User")
                        .WithMany("taches")
                        .HasForeignKey("UserIdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");

                    b.Navigation("User");
                });

            modelBuilder.Entity("simpl_ToDoList.Data.Entity.Status", b =>
                {
                    b.Navigation("taches");
                });

            modelBuilder.Entity("simpl_ToDoList.Data.Entity.User", b =>
                {
                    b.Navigation("taches");
                });
#pragma warning restore 612, 618
        }
    }
}
